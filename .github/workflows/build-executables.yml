name: Build Executables

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger from GitHub Actions tab

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            output_name: SlideAudioGenerator.exe
            build_script: build_cross_platform.py
          - os: macos-latest
            output_name: SlideAudioGenerator.app
            build_script: build_cross_platform.py
          - os: ubuntu-latest
            output_name: SlideAudioGenerator
            build_script: build_cross_platform.py
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build executable
      run: python ${{ matrix.build_script }}
    
    - name: Upload artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: SlideAudioGenerator-Windows
        path: dist/SlideAudioGenerator.exe
        retention-days: 90
    
    - name: Upload artifact (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: SlideAudioGenerator-macOS
        path: dist/SlideAudioGenerator.app
        retention-days: 90
    
    - name: Upload artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: SlideAudioGenerator-Linux
        path: dist/SlideAudioGenerator
        retention-days: 90
    
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
